class Solution {
    public int minEatingSpeed(int[] piles, int h) {

        int low = 1;
        int high = 0;
        
        for(int i: piles){
            high = Math.max(high, i);
        }

        while(low<high){
            int mid = low + (high - low)/2;
            int[] tempArray = new int[piles.length];
            for(int i=0;i<piles.length;i++){
                tempArray[i]=piles[i];
            }
            if(rangedSearch(mid,tempArray,h) < 0) low = mid + 1;
            else high = mid;
        }
        return low;
    }

    public int rangedSearch(int mid, int[] tempArray, int h){
        for(int i: tempArray){
            int t = i/mid;
            h-=t;
            if(i%mid!=0) h--;
        }
        return h;
    }
}
