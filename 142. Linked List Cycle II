/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {

    public ListNode meetPoint(ListNode head){
        ListNode fast = head;
        ListNode slow = head;

        while(fast!=null && fast.next!=null){
            fast = fast.next.next;
            slow = slow.next;
            if(slow==fast){
                return slow;
            }
        }
        return null;
    }
    public ListNode detectCycle(ListNode head) {
        if(head==null || head.next==null) return null;

        ListNode intersect = meetPoint(head);
        if(intersect == null) return null;

        ListNode curr = head;
        while(curr!=intersect){
            curr = curr.next;
            intersect = intersect.next;
        }
        return intersect;
    }
}
