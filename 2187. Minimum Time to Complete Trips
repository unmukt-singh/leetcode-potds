class Solution {
    public long minimumTime(int[] time, int totalTrips) {

        long low = Long.MAX_VALUE;
        long high = 0;
        long min = Long.MAX_VALUE;

        for(int i: time){
            low = Math.min(low, i);
            min = Math.min(low, i);
        }
        high = min*totalTrips;

        while(low<high){
            long mid = low + (high - low)/2;
            if(rangedSearch(mid, totalTrips, time)){
                high = mid;
            }
            else{
                low = mid + 1;
            }
        }
        return low;
    }

    public boolean rangedSearch(long mid, int totalTrips, int[] time){
        long trips = 0l;
        for(int i: time){
            trips+=mid/i;
        }
        if(trips>=totalTrips) return true;
        return false;
    }
}
